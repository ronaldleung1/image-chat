import Image from "next/image";
import { Button } from "@/components/ui/button";
import { Skeleton } from "@/components/ui/skeleton";
import { Download } from "lucide-react";

type Message = {
  type: "user" | "bot";
  content: string;
  image?: string;
};

interface ChatLogProps {
  chatLog: Message[];
  isLoading: boolean;
}

export const ChatLog: React.FC<ChatLogProps> = ({ chatLog, isLoading }) => {
  return (
    <div className="flex-1 overflow-auto p-4">
      <div className="max-w-[700px] space-y-4 mx-auto pt-8">
        {chatLog.map((message, index) => (
          <div
            key={index}
            className={`flex items-end gap-2 ${
              message.type === "user" ? "justify-end" : "justify-start"
            }`}
          >
            <div
              className={`flex flex-col gap-2 rounded-lg ${
                message.type === "user"
                  ? "bg-primary text-primary-foreground"
                  : "bg-muted"
              } p-3 max-w-[75%]`}
            >
              {message.content.trim() !== "" && (
                <p className="text-sm">{message.content}</p>
              )}
              {message.image && (
                <Image
                  src={message.image}
                  alt={
                    message.type === "user"
                      ? "Uploaded by user"
                      : "Generated by DALL-E"
                  }
                  width="256"
                  height="256"
                  className="rounded-md"
                />
              )}
            </div>
            {message.type === "bot" && (
              <div className="flex flex-col items-center gap-2">
                <Button
                  size="icon"
                  variant="ghost"
                  onClick={() => window.open(message.image, "_blank")}
                >
                  <Download className="w-6 h-6" />
                </Button>
              </div>
            )}
          </div>
        ))}
        {isLoading && (
          <div className="flex items-end gap-2 justify-start">
            <div className="rounded-lg bg-muted p-3 max-w-[75%]">
              <Skeleton className="h-[256px] w-[256px] rounded-lg" />
            </div>
          </div>
        )}
      </div>
    </div>
  );
};
